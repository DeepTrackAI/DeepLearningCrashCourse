name: "Prune old GHCR images"

on:
  schedule:
    - cron: '0 2 * * *'      # daily at 02:00 UTC
  push:
    branches: [ docker ]
  registry_package:
    types: [ published ]

permissions:
  contents: read
  packages: write

jobs:
  prune:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
            | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
            | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Re-tag newest as ‚Äúlatest‚Äù and prune the rest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER:   ${{ github.repository_owner }}
        run: |
          set -euo pipefail

          for IMAGE in deep-learning-crash-course deep-learning-crash-course-gpu; do
            echo
            echo "üîç Processing $OWNER/$IMAGE"
            versions=$(gh api --paginate \
              -H "Accept: application/vnd.github.v3+json" \
              /orgs/$OWNER/packages/container/$IMAGE/versions)

            # pick the newest by creation date
            newest_id=$(echo "$versions" \
                          | jq -r 'sort_by(.created_at) | last | .id')
            echo "üõ° Retagging version $newest_id as latest"
            gh api -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              /orgs/$OWNER/packages/container/$IMAGE/versions/$newest_id/tags \
              -f name=latest

            # delete all other versions
            echo "$versions" \
              | jq -r --arg keep "$newest_id" '.[] | select(.id != ($keep|tonumber)) | .id' \
              | while read id; do
                  echo "‚Üí Deleting version $id"
                  gh api -X DELETE \
                    -H "Accept: application/vnd.github.v3+json" \
                    /orgs/$OWNER/packages/container/$IMAGE/versions/$id
                done
          done